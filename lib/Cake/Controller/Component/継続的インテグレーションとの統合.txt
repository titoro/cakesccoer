＊＊＊継続的インテグレ―ションとの統合＊＊＊

継続的インテグレ―ション（CI）
目的：
　テストでエラーが見つかったら見逃さず対応することで
　‐問題の発見が早くなる
　‐いつリポジトリからコードを取得してもバグがない状態を保つ
　こと
　
○Jenkins
　1．Jenkinsをインストールする
　
　公式サイトよりインストーラーをダウンロード
　http://jenkins-ci.org/
　
　そのままインストール。
　（インストールディレクトリ内に作業フォルダが作成されるため
　　インストール先をCディレクトリ直下にjenkinsフォルダ作成して
　　そこにインストールさせた）
　　
　■参考サイト
　JenkinsでCI環境構築チュートリアル (Windows編)
　http://ics-web.jp/lab/archives/2410
　　
　以下、上記サイトの環境を構築。
　
　○Jenkinsインストール
　インストール完了すると自動的に
　http://localhost:8080/
　が開かれ、Jenkinsの画面が表示される。
　
　○Windows環境でGitを使用可能にする
　今まではSourceTreeを使用していた。
　コマンドプロンプト、Jenkinsとの連携に必要なことから
　git for windows をインストール。
　
　※インストールの際
　　Use Git from the Windows Command Pronptを選択する
　　
　コマンドプロンプトで
　git --version でgitのバージョンが表示されることを確認→OK
　
　■参考（追記）サイト
　http://d.hatena.ne.jp/m-hiyama/20140203/1391381365
　
　○WinSCPのインストール
　　http://winscp.net/eng/docs/lang:jp
　　>>
　　MS-Windows上で動く オープンソースでグラフィカルなFTP、FTPS、SFTPクライアントプログラム
　  <<
　  Jenkinsとの連携の環境整備の為、WinSCPをインストール。
　  
　  ※特徴
　  　グラフィカルインターフェイス
　  　共通したファイル操作
　  　SSH-1とSSH2でのSFTPとSCPプロトコル、FTPプロトコルのサポート
　  　　　　　　　　　　　　　　　　　　　　　　　　　　　など
　  　　　　　　　　　　　　　　　　　　　　　　　　　　　
　  FFTPを使用しているが（業務で）
　  自分の作業はWinSCPの方が便利そうなのでこちらを利用していくことにする。
　  デプロイ処理を作成する際に使用するみたい。
　  
　  インストールディレクトリを環境変数に追加。
　  
　  正常にインストールされているか確認
　  winscp -h　→OK。
　  
　 ○テストジョブの作成
　 （ここから実践CakePHP2入門に沿ってテストジョブの作成）
　 　
　 　1．Jenkinsにアクセス
　 　2．新規ジョブ作成をクリック
　 　　フリースタイルを選択
　 　　ビルドの手順の追加で「シェルの実行」を選択。
　 　　シェルスクリプトの入力フィールド出てくるので
　 　　・PHPへPATHを設定（デフォルトで通っていない場合）
　 　　・アプリケーションルートディレクトリへ移動
　 　　・cakeコマンドでテストを実行
　 　　
　 　3．実行するテストクラスを作成する（全クラス実行クラス）
　 　　CakeTestSuitesクラスのインスタンスを生成
　 　　CakeTestSuitesインスタンスにファイル単位orディレクトリ単位の追加で
　 　　実行するテストケースを追加する。
　 　　ファイル単位に追加；addTestFileメソッド
　 　　ディレクトリ単位に追加：addTestDirectoryメソッド
　 　　
　 ○ビルドを実行する
　 　ビルド実行リンクをクリック。
　 　
　 　■Jenkins実行の参考サイト
　 　it-note 1.0 ドキュメント
　 　http://maman-it-information.readthedocs.org/ja/latest/src/jenkins/jenkins.html
　 　
　 　Windowsバッチファイルの実行→echoで出力することを確認。
　 　
＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊



